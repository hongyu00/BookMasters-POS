Imports System.Data.SqlClient
Imports System.Globalization
Imports System.Text

Public Class GenerateProductReport
    Private strManagerName As String = UserLogin.strCurrentLoginStaffName
    Private listOfNewBooksID As New List(Of String)
    Private listOfNewBooksQtty As New List(Of String)
    Private listOfNewBooksOriPrice As New List(Of String)
    Private listOfNewBooksAddDate As New List(Of String)
    Private listOfNewBooksName As New List(Of String)

    Private listOfInventoryID As New List(Of String)
    Private listOfInventoryName As New List(Of String)
    Private listOfInventoryQtty As New List(Of String)
    Private listOfInventoryStockIn As New List(Of String)
    Private listOfInventoryStockOut As New List(Of String)

    Private Sub GenerateProductReport_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        btnGenerateNewBookArrivals.Enabled = True
        cboNewBookArrivalsMonth.DataSource = CultureInfo.InvariantCulture.DateTimeFormat.MonthNames.Take(12).ToList()
        'cbonewBookArrivalsYear.DataSource = CultureInfo.InvariantCulture.DateTimeFormat.MonthNames.Take(12).ToList()
        'cboDiscountYear.DataSource = Enumerable.Range(2018, DateTime.UtcNow.Year).Reverse().ToList()
        cbonewBookArrivalsYear.Items.Add("2018")
        cbonewBookArrivalsYear.Items.Add("2019")
        cbonewBookArrivalsYear.Items.Add("2020")
        cbonewBookArrivalsYear.Items.Add("2021")
        cbonewBookArrivalsYear.SelectedIndex = 2

        If UserLogin.strCurrentLoginStaffRole = "MANAGER" Then
            btnGenerateNewBookArrivals.Enabled = True
        Else
            btnGenerateNewBookArrivals.Enabled = False
        End If

    End Sub

    Private Sub printNewBookArrivalsReport_PrintPage(sender As Object, e As Printing.PrintPageEventArgs) Handles printNewBookArrivalsReport.PrintPage
        listOfNewBooksID.Clear()
        listOfNewBooksQtty.Clear()
        listOfNewBooksOriPrice.Clear()
        listOfNewBooksAddDate.Clear()
        listOfNewBooksName.Clear()

        Dim strMonthSelected As String = cboNewBookArrivalsMonth.SelectedIndex + 1
        Dim strMonthDisplayed As String = cboNewBookArrivalsMonth.SelectedValue
        Dim strYearSelected As String = cbonewBookArrivalsYear.SelectedItem.ToString
        Dim strYearDisplayed As String = cbonewBookArrivalsYear.SelectedItem.ToString

        Dim intCountRecords As Integer = 0

        Dim fntHeaderNewBookArrivals As New Font("Century Gothic", 28)
        Dim fntHeaderAddressInfo As New Font("Century Gothic", 12)
        Dim formatHeaderAddressInfo As StringFormat = New StringFormat()
        formatHeaderAddressInfo.Alignment = StringAlignment.Center
        formatHeaderAddressInfo.LineAlignment = StringAlignment.Center
        Dim fntSubHeader As New Font("Century Gothic", 12.5)
        Dim fntContent As New Font("Century Gothic", 14)
        Dim fntFooter As New Font("Century Gothic", 13)

        Dim strHeaderNewBookArrivals As String = "Monthly New Book Arrivals Report"
        Dim strHeaderAddressInfo As String = "BOOK MASTER" & vbNewLine & "Ground Floor, Tan Sri Khaw Kai Boh Building, Kampus Utama, Jalan Genting Kelang," & vbNewLine & "53300 Kuala Lumpur, Wilayah Persekutuan Kuala Lumpur" & vbNewLine & "Tel: +(603)-4145 0123"
        Dim strSubHeader As String = String.Format(" Printed on {0:dd-MMMM-yyyy hh:mm:ss tt}" & vbNewLine &
        " Generated by " + strManagerName + ", checked on " & strMonthDisplayed & ", " & strYearDisplayed, DateTime.Now)

        Dim sdr As SqlDataReader
        Dim sql As String
        Static intCountPage As Integer = 1

        If OpenConnection() = True Then
            Try
                sql = "Select productID,  productQuantity, productOriginalPrice, productAddDate, productName from Product Where Month(productAddDate) = @strMonthSelected And Year(productAddDate) = @strYearSelected And productCategory = 'Book'"
                Dim cmd As SqlCommand = New SqlCommand(sql, conn)
                cmd.Parameters.AddWithValue("@strMonthSelected", strMonthSelected)
                cmd.Parameters.AddWithValue("@strYearSelected", strYearSelected)

                sdr = cmd.ExecuteReader()
                If sdr.HasRows Then
                    While sdr.Read
                        Dim strAddedDate As String = String.Format("{0:d/M/yyyy }", sdr.GetValue(3))
                        listOfNewBooksID.Add(sdr.GetValue(0).ToString())
                        listOfNewBooksQtty.Add(sdr.GetValue(1).ToString())
                        listOfNewBooksOriPrice.Add(sdr.GetValue(2).ToString())
                        listOfNewBooksAddDate.Add(strAddedDate)
                        listOfNewBooksName.Add(sdr.GetValue(4).ToString())
                        intCountRecords += 1
                    End While
                Else
                    'lblTestUncheked.Text = "No records"
                End If

                Dim recordTittle As New StringBuilder()
                Dim recordID As New StringBuilder()
                Dim recordName As New StringBuilder()
                Dim recordQtty As New StringBuilder()
                Dim recordOriPrice As New StringBuilder()
                Dim recordAddDate As New StringBuilder()
                Dim recordFooter As New StringBuilder()

                recordTittle.AppendLine("===================================================================")
                recordTittle.AppendLine("  Book ID    Book Name                                     Qtty           Price        Added Date                   ")
                recordTittle.AppendLine("===================================================================")

                For Each item In listOfNewBooksID
                    recordID.AppendFormat("{0,1} {1}" & vbNewLine, " ", item)
                Next
                For Each item In listOfNewBooksName
                    recordName.AppendFormat("{0,18} {1}" & vbNewLine, " ", item)
                Next
                For Each item In listOfNewBooksQtty
                    recordQtty.AppendFormat("{0,80} {1}" & vbNewLine, " ", item)
                Next
                For Each item In listOfNewBooksOriPrice
                    recordOriPrice.AppendFormat("{0,98} {1}" & vbNewLine, " ", item)
                Next
                For Each item In listOfNewBooksAddDate
                    recordAddDate.AppendFormat("{0,116} {1}" & vbNewLine, " ", item)
                Next

                recordAddDate.AppendLine("_______________________________________________________________________________")
                recordAddDate.AppendLine()
                recordAddDate.AppendFormat("{0, 2} record(s) found.", intCountRecords)

                With e.Graphics
                    .DrawImage(My.Resources.BookMasterLogo, 200, 20, 450, 80)
                    .DrawString(strHeaderNewBookArrivals, fntHeaderNewBookArrivals, Brushes.Black, 115, 110)
                    .DrawString(strHeaderAddressInfo, fntHeaderAddressInfo, Brushes.Black, 420, 200, formatHeaderAddressInfo)
                    .DrawString(strSubHeader, fntSubHeader, Brushes.Black, 30, 250)
                    .DrawString(recordTittle.ToString(), fntContent, Brushes.Black, 30, 295)
                    .DrawString(recordID.ToString(), fntContent, Brushes.Black, 30, 370)
                    .DrawString(recordName.ToString(), fntContent, Brushes.Black, 30, 370)
                    .DrawString(recordQtty.ToString(), fntContent, Brushes.Black, 30, 370)
                    .DrawString(recordOriPrice.ToString(), fntContent, Brushes.Black, 30, 370)
                    .DrawString(recordAddDate.ToString(), fntContent, Brushes.Black, 30, 370)
                    .DrawString("Page(s) " & intCountPage & " of " & intCountPage, fntFooter, Brushes.Black, 30, e.MarginBounds.Bottom)
                End With
                CloseConnection()
            Catch ex As Exception
                MessageBox.Show(ex.ToString, "Hmmmmm", MessageBoxButtons.OK, MessageBoxIcon.Question)
            End Try
        End If
    End Sub

    Private Sub generateNewBookArrivals_Click(sender As Object, e As EventArgs) Handles btnGenerateNewBookArrivals.Click
        newBookArrivalsPreview.Document = printNewBookArrivalsReport
        newBookArrivalsPreview.ShowDialog(Me)
    End Sub

    Private Sub printInventorySummaryReport_PrintPage(sender As Object, e As Printing.PrintPageEventArgs) Handles printInventorySummaryReport.PrintPage
        listOfInventoryID.Clear()
        listOfInventoryName.Clear()
        listOfInventoryQtty.Clear()
        listOfInventoryStockIn.Clear()
        listOfInventoryStockOut.Clear()

        Dim intCountRecords As Integer = 0

        Dim fntHeaderInventoryStock As New Font("Century Gothic", 28)
        Dim fntHeaderAddressInfo As New Font("Century Gothic", 12)
        Dim formatHeaderAddressInfo As StringFormat = New StringFormat()
        formatHeaderAddressInfo.Alignment = StringAlignment.Center
        formatHeaderAddressInfo.LineAlignment = StringAlignment.Center
        Dim fntSubHeader As New Font("Century Gothic", 12.5)
        Dim fntContent As New Font("Century Gothic", 14)
        Dim fntFooter As New Font("Century Gothic", 13)

        Static intCountPage As Integer = 1

        Dim strHeaderInventoryStock As String = "Inventory Summary Report"
        Dim strHeaderAddressInfo As String = "BOOK MASTER" & vbNewLine & "Ground Floor, Tan Sri Khaw Kai Boh Building, Kampus Utama, Jalan Genting Kelang," & vbNewLine & "53300 Kuala Lumpur, Wilayah Persekutuan Kuala Lumpur" & vbNewLine & "Tel: +(603)-4145 0123"
        Dim strSubHeader As String = String.Format(" Printed on {0:dd-MMMM-yyyy hh:mm:ss tt}" & vbNewLine &
        " Generated by " + strManagerName, DateTime.Now)

        Dim sdr As SqlDataReader
        Dim sql As String

        If OpenConnection() = True Then

            Try
                sql = "Select productID,  productQuantity, productStockIn, productStockOut, productName from Product Where productCategory = 'Book' OR productCategory = 'Stationery'"
                Dim cmd As SqlCommand = New SqlCommand(sql, conn)

                sdr = cmd.ExecuteReader()
                If sdr.HasRows Then
                    While sdr.Read
                        listOfInventoryID.Add(sdr.GetValue(0).ToString())
                        listOfInventoryQtty.Add(sdr.GetValue(1).ToString())
                        listOfInventoryStockIn.Add(sdr.GetValue(2).ToString())
                        listOfInventoryStockOut.Add(sdr.GetValue(3).ToString())
                        listOfInventoryName.Add(sdr.GetValue(4).ToString())
                        intCountRecords += 1
                    End While
                Else
                    'lblTestUncheked.Text = "No records"
                End If

                Dim recordTittle As New StringBuilder()
                Dim recordID As New StringBuilder()
                Dim recordName As New StringBuilder()
                Dim recordQtty As New StringBuilder()
                Dim recordStockIn As New StringBuilder()
                Dim recordStockOut As New StringBuilder()

                recordTittle.AppendLine("================================================================")
                recordTittle.AppendLine("  Prod.ID    Product Name                                                          Qtty  Stk.In  Stk.Out")
                recordTittle.AppendLine("================================================================")

                For Each item In listOfInventoryID
                    recordID.AppendFormat("{0,1} {1}" & vbNewLine, " ", item)
                Next
                For Each item In listOfInventoryName
                    recordName.AppendFormat("{0,18} {1}" & vbNewLine, " ", item)
                Next
                For Each item In listOfInventoryQtty
                    recordQtty.AppendFormat("{0,107} {1}" & vbNewLine, " ", item)
                Next
                For Each item In listOfInventoryStockIn
                    recordStockIn.AppendFormat("{0,119} {1}" & vbNewLine, " ", item)
                Next
                For Each item In listOfInventoryStockOut
                    recordStockOut.AppendFormat("{0,130} {1}" & vbNewLine, " ", item)
                Next

                recordStockOut.AppendLine("_____________________________________________________________________________")
                recordStockOut.AppendLine()
                recordStockOut.AppendFormat("{0, 2} record(s) found.", intCountRecords)

                With e.Graphics
                    .DrawImage(My.Resources.BookMasterLogo, 200, 20, 450, 80)
                    .DrawString(strHeaderInventoryStock, fntHeaderInventoryStock, Brushes.Black, 170, 110)
                    .DrawString(strHeaderAddressInfo, fntHeaderAddressInfo, Brushes.Black, 430, 200, formatHeaderAddressInfo)
                    .DrawString(strSubHeader, fntSubHeader, Brushes.Black, 30, 250)
                    .DrawString(recordTittle.ToString(), fntContent, Brushes.Black, 30, 295)
                    .DrawString(recordID.ToString(), fntContent, Brushes.Black, 30, 370)
                    .DrawString(recordName.ToString(), fntContent, Brushes.Black, 30, 370)
                    .DrawString(recordQtty.ToString(), fntContent, Brushes.Black, 30, 370)
                    .DrawString(recordStockIn.ToString(), fntContent, Brushes.Black, 30, 370)
                    .DrawString(recordStockOut.ToString(), fntContent, Brushes.Black, 30, 370)
                    .DrawString("Page(s) " & intCountPage & " of " & intCountPage, fntFooter, Brushes.Black, 30, e.MarginBounds.Bottom)
                End With
                CloseConnection()
            Catch ex As Exception
                MessageBox.Show(ex.ToString, "Hmmmmm", MessageBoxButtons.OK, MessageBoxIcon.Question)
            End Try
        End If
    End Sub

    Private Sub btnGenerateInventorySummary_Click(sender As Object, e As EventArgs) Handles btnGenerateInventorySummary.Click
        inventorySummaryPreview.Document = printInventorySummaryReport
        inventorySummaryPreview.ShowDialog(Me)
    End Sub
End Class