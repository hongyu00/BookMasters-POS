Imports System.Data.SqlClient
Imports System.Globalization
Imports System.Text

Public Class GenerateDiscountReport
    Private strManagerName As String = UserLogin.strCurrentLoginStaffName
    Private listOfDiscountsID As New List(Of String)
    Private listOfDiscountsStartDate As New List(Of String)
    Private listOfDiscountsEndDate As New List(Of String)
    Private listOfDiscountsPercentage As New List(Of String)
    Private listOfDiscountsStatus As New List(Of String)
    Private listOfDiscountsName As New List(Of String)

    Private Sub GenerateDiscountReport_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        btnGenerateMonthlyDiscountReport.Enabled = True
        cboDiscountMonth.DataSource = CultureInfo.InvariantCulture.DateTimeFormat.MonthNames.Take(12).ToList()
        'cboDiscountYear.DataSource = Enumerable.Range(2018, DateTime.UtcNow.Year).Reverse().ToList()
        cboDiscountYear.Items.Add(2018)
        cboDiscountYear.Items.Add(2019)
        cboDiscountYear.Items.Add(2020)
        cboDiscountYear.Items.Add(2021)
        cboDiscountYear.SelectedIndex = 2
        'cboDiscountYear.SelectedText = "-----Select-----"

        If UserLogin.strCurrentLoginStaffRole = "MANAGER" Then
            btnGenerateMonthlyDiscountReport.Enabled = True
        Else
            btnGenerateMonthlyDiscountReport.Enabled = False
        End If

    End Sub

    Private Sub printMonthlyDiscountReport_PrintPage(sender As Object, e As Printing.PrintPageEventArgs) Handles printMonthlyDiscountReport.PrintPage
        listOfDiscountsID.Clear()
        listOfDiscountsStartDate.Clear()
        listOfDiscountsEndDate.Clear()
        listOfDiscountsPercentage.Clear()
        listOfDiscountsStatus.Clear()
        listOfDiscountsName.Clear()

        Dim strMonthSelected As String = cboDiscountMonth.SelectedIndex + 1
        Dim strMonthDisplayed As String = cboDiscountMonth.SelectedValue
        Dim strYearSelected As String = cboDiscountYear.SelectedItem.ToString
        Dim intYearDisplayed As Integer = cboDiscountYear.SelectedItem.ToString

        Dim intCountRecords As Integer = 0
        Static intCountPage As Integer = 1

        Dim fntHeaderMonthlyDiscount As New Font("Century Gothic", 28)
        Dim fntHeaderAddressInfo As New Font("Century Gothic", 12)
        Dim formatHeaderAddressInfo As StringFormat = New StringFormat()
        formatHeaderAddressInfo.Alignment = StringAlignment.Center
        formatHeaderAddressInfo.LineAlignment = StringAlignment.Center
        Dim fntSubHeader As New Font("Century Gothic", 12.5)
        Dim fntContent As New Font("Century Gothic", 14)
        Dim fntFooter As New Font("Century Gothic", 13)

        Dim strHeaderNewBookArrivals As String = "Monthly Discount Report"
        Dim strHeaderAddressInfo As String = "BOOK MASTER" & vbNewLine & "Ground Floor, Tan Sri Khaw Kai Boh Building, Kampus Utama, Jalan Genting Kelang," & vbNewLine & "53300 Kuala Lumpur, Wilayah Persekutuan Kuala Lumpur" & vbNewLine & "Tel: +(603)-4145 0123"
        Dim strSubHeader As String = String.Format(" Printed on {0:dd-MMMM-yyyy hh:mm:ss tt}" & vbNewLine &
        " Generated by " + strManagerName + ", cheked on " & strMonthDisplayed & ", " & intYearDisplayed, DateTime.Now)

        Dim sdr As SqlDataReader
        Dim sql As String

        If OpenConnection() = True Then

            Try
                sql = "Select discountID, discountStartDate, discountEndDate, discountPercentage, discountStatus, discountName from Discount Where (Month(discountStartDate) = @strMonthSelected And Year(discountStartDate) = @strYearSelected) OR (Month(discountEndDate) = @strMonthSelected And Year(discountEndDate) = @strYearSelected)"
                Dim cmd As SqlCommand = New SqlCommand(sql, conn)
                cmd.Parameters.AddWithValue("@strMonthSelected", strMonthSelected)
                cmd.Parameters.AddWithValue("@strYearSelected", strYearSelected)
                sdr = cmd.ExecuteReader()
                If sdr.HasRows Then
                    While sdr.Read
                        Dim strStartDate As String = String.Format("{0:d/M/yyyy }", sdr.GetValue(1))
                        Dim strEnddDate As String = String.Format("{0:d/M/yyyy }", sdr.GetValue(2))
                        listOfDiscountsID.Add(sdr.GetValue(0).ToString())
                        listOfDiscountsStartDate.Add(strStartDate)
                        listOfDiscountsEndDate.Add(strEnddDate)
                        listOfDiscountsPercentage.Add(sdr.GetValue(3).ToString())
                        listOfDiscountsStatus.Add(sdr.GetValue(4).ToString())
                        listOfDiscountsName.Add(sdr.GetValue(5).ToString())
                        intCountRecords += 1
                    End While
                End If

                Dim recordTitle As New StringBuilder()
                Dim recordID As New StringBuilder()
                Dim recordStartDate As New StringBuilder()
                Dim recordEndDate As New StringBuilder()
                Dim recordPercentage As New StringBuilder()
                Dim recordStatus As New StringBuilder()
                Dim recordName As New StringBuilder()
                Dim recordFooter As New StringBuilder()

                recordTitle.AppendLine("     ===================================================================")
                recordTitle.AppendLine("       Discount ID  Start Date   End Date   %      Status         Discount Name ")
                recordTitle.AppendLine("     ===================================================================")
                For Each item In listOfDiscountsID
                    recordID.AppendFormat("{0,8} {1}" & vbNewLine, " ", item)
                Next
                For Each item In listOfDiscountsStartDate
                    recordStartDate.AppendFormat("{0,28} {1}" & vbNewLine, " ", item)
                Next
                For Each item In listOfDiscountsEndDate
                    recordEndDate.AppendFormat("{0,49} {1}" & vbNewLine, " ", item)
                Next
                For Each item In listOfDiscountsPercentage
                    recordPercentage.AppendFormat("{0,70} {1}" & vbNewLine, " ", item)
                Next
                For Each item In listOfDiscountsStatus
                    recordStatus.AppendFormat("{0, 79} {1}" & vbNewLine, " ", item)
                Next
                For Each item In listOfDiscountsName
                    recordName.AppendFormat("{0,100} {1}" & vbNewLine, " ", item)
                Next

                recordName.AppendLine("     _______________________________________________________________________________")
                recordName.AppendLine()
                recordName.AppendFormat("{0, 8} record(s) found.", intCountRecords)

                With e.Graphics
                    .DrawImage(My.Resources.BookMasterLogo, 200, 20, 450, 80)
                    .DrawString(strHeaderNewBookArrivals, fntHeaderMonthlyDiscount, Brushes.Black, 180, 110)
                    .DrawString(strHeaderAddressInfo, fntHeaderAddressInfo, Brushes.Black, 420, 200, formatHeaderAddressInfo)
                    .DrawString(strSubHeader, fntSubHeader, Brushes.Black, 30, 250)
                    .DrawString(recordTitle.ToString(), fntContent, Brushes.Black, 0, 295)
                    .DrawString(recordID.ToString(), fntContent, Brushes.Black, 0, 370)
                    .DrawString(recordStartDate.ToString(), fntContent, Brushes.Black, 0, 370)
                    .DrawString(recordEndDate.ToString(), fntContent, Brushes.Black, 0, 370)
                    .DrawString(recordPercentage.ToString(), fntContent, Brushes.Black, 0, 370)
                    .DrawString(recordStatus.ToString(), fntContent, Brushes.Black, 0, 370)
                    .DrawString(recordName.ToString(), fntContent, Brushes.Black, 0, 370)
                    '.DrawString(recordFooter.ToString(), fntContent, Brushes.Black, 0, 440)
                    .DrawString("Page(s) " & intCountPage & " of " & intCountPage, fntFooter, Brushes.Black, 30, e.MarginBounds.Bottom)
                End With
                CloseConnection()
            Catch ex As Exception
                MessageBox.Show(ex.ToString, "Hmmmmm", MessageBoxButtons.OK, MessageBoxIcon.Question)
            End Try
        End If
    End Sub

    Private Sub btnGenerateMonthlyDiscountReport_Click(sender As Object, e As EventArgs) Handles btnGenerateMonthlyDiscountReport.Click
        monthlyDiscountReportPreview.Document = printMonthlyDiscountReport
        monthlyDiscountReportPreview.ShowDialog(Me)
    End Sub

End Class