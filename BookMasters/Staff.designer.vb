'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="BookMastersDB")>  _
Partial Public Class StaffDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertStaff(instance As Staff)
    End Sub
  Partial Private Sub UpdateStaff(instance As Staff)
    End Sub
  Partial Private Sub DeleteStaff(instance As Staff)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.BookMasters.My.MySettings.Default.BookMastersDBConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Staffs() As System.Data.Linq.Table(Of Staff)
		Get
			Return Me.GetTable(Of Staff)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Staff")>  _
Partial Public Class Staff
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _staffID As String
	
	Private _staffName As String
	
	Private _staffRole As String
	
	Private _staffType As String
	
	Private _staffPassword As String
	
	Private _staffIC As String
	
	Private _staffContact As String
	
	Private _staffStatus As String
	
	Private _joinedDate As Date
	
	Private _staffSalary As Decimal
	
	Private _staffAge As System.Nullable(Of Integer)
	
	Private _staffBirthDate As System.Nullable(Of Date)
	
	Private _staffGender As String
	
	Private _staffAddress As String
	
	Private _staffEmail As String
	
	Private _leaveDate As System.Nullable(Of Date)
	
	Private _staffLeaveReason As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnstaffIDChanging(value As String)
    End Sub
    Partial Private Sub OnstaffIDChanged()
    End Sub
    Partial Private Sub OnstaffNameChanging(value As String)
    End Sub
    Partial Private Sub OnstaffNameChanged()
    End Sub
    Partial Private Sub OnstaffRoleChanging(value As String)
    End Sub
    Partial Private Sub OnstaffRoleChanged()
    End Sub
    Partial Private Sub OnstaffTypeChanging(value As String)
    End Sub
    Partial Private Sub OnstaffTypeChanged()
    End Sub
    Partial Private Sub OnstaffPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnstaffPasswordChanged()
    End Sub
    Partial Private Sub OnstaffICChanging(value As String)
    End Sub
    Partial Private Sub OnstaffICChanged()
    End Sub
    Partial Private Sub OnstaffContactChanging(value As String)
    End Sub
    Partial Private Sub OnstaffContactChanged()
    End Sub
    Partial Private Sub OnstaffStatusChanging(value As String)
    End Sub
    Partial Private Sub OnstaffStatusChanged()
    End Sub
    Partial Private Sub OnjoinedDateChanging(value As Date)
    End Sub
    Partial Private Sub OnjoinedDateChanged()
    End Sub
    Partial Private Sub OnstaffSalaryChanging(value As Decimal)
    End Sub
    Partial Private Sub OnstaffSalaryChanged()
    End Sub
    Partial Private Sub OnstaffAgeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnstaffAgeChanged()
    End Sub
    Partial Private Sub OnstaffBirthDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnstaffBirthDateChanged()
    End Sub
    Partial Private Sub OnstaffGenderChanging(value As String)
    End Sub
    Partial Private Sub OnstaffGenderChanged()
    End Sub
    Partial Private Sub OnstaffAddressChanging(value As String)
    End Sub
    Partial Private Sub OnstaffAddressChanged()
    End Sub
    Partial Private Sub OnstaffEmailChanging(value As String)
    End Sub
    Partial Private Sub OnstaffEmailChanged()
    End Sub
    Partial Private Sub OnleaveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnleaveDateChanged()
    End Sub
    Partial Private Sub OnstaffLeaveReasonChanging(value As String)
    End Sub
    Partial Private Sub OnstaffLeaveReasonChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staffID", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property staffID() As String
		Get
			Return Me._staffID
		End Get
		Set
			If (String.Equals(Me._staffID, value) = false) Then
				Me.OnstaffIDChanging(value)
				Me.SendPropertyChanging
				Me._staffID = value
				Me.SendPropertyChanged("staffID")
				Me.OnstaffIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staffName", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property staffName() As String
		Get
			Return Me._staffName
		End Get
		Set
			If (String.Equals(Me._staffName, value) = false) Then
				Me.OnstaffNameChanging(value)
				Me.SendPropertyChanging
				Me._staffName = value
				Me.SendPropertyChanged("staffName")
				Me.OnstaffNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staffRole", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property staffRole() As String
		Get
			Return Me._staffRole
		End Get
		Set
			If (String.Equals(Me._staffRole, value) = false) Then
				Me.OnstaffRoleChanging(value)
				Me.SendPropertyChanging
				Me._staffRole = value
				Me.SendPropertyChanged("staffRole")
				Me.OnstaffRoleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staffType", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property staffType() As String
		Get
			Return Me._staffType
		End Get
		Set
			If (String.Equals(Me._staffType, value) = false) Then
				Me.OnstaffTypeChanging(value)
				Me.SendPropertyChanging
				Me._staffType = value
				Me.SendPropertyChanged("staffType")
				Me.OnstaffTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staffPassword", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property staffPassword() As String
		Get
			Return Me._staffPassword
		End Get
		Set
			If (String.Equals(Me._staffPassword, value) = false) Then
				Me.OnstaffPasswordChanging(value)
				Me.SendPropertyChanging
				Me._staffPassword = value
				Me.SendPropertyChanged("staffPassword")
				Me.OnstaffPasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staffIC", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property staffIC() As String
		Get
			Return Me._staffIC
		End Get
		Set
			If (String.Equals(Me._staffIC, value) = false) Then
				Me.OnstaffICChanging(value)
				Me.SendPropertyChanging
				Me._staffIC = value
				Me.SendPropertyChanged("staffIC")
				Me.OnstaffICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staffContact", DbType:="VarChar(15)")>  _
	Public Property staffContact() As String
		Get
			Return Me._staffContact
		End Get
		Set
			If (String.Equals(Me._staffContact, value) = false) Then
				Me.OnstaffContactChanging(value)
				Me.SendPropertyChanging
				Me._staffContact = value
				Me.SendPropertyChanged("staffContact")
				Me.OnstaffContactChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staffStatus", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property staffStatus() As String
		Get
			Return Me._staffStatus
		End Get
		Set
			If (String.Equals(Me._staffStatus, value) = false) Then
				Me.OnstaffStatusChanging(value)
				Me.SendPropertyChanging
				Me._staffStatus = value
				Me.SendPropertyChanged("staffStatus")
				Me.OnstaffStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_joinedDate", DbType:="Date NOT NULL")>  _
	Public Property joinedDate() As Date
		Get
			Return Me._joinedDate
		End Get
		Set
			If ((Me._joinedDate = value)  _
						= false) Then
				Me.OnjoinedDateChanging(value)
				Me.SendPropertyChanging
				Me._joinedDate = value
				Me.SendPropertyChanged("joinedDate")
				Me.OnjoinedDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staffSalary", DbType:="Decimal(7,2) NOT NULL")>  _
	Public Property staffSalary() As Decimal
		Get
			Return Me._staffSalary
		End Get
		Set
			If ((Me._staffSalary = value)  _
						= false) Then
				Me.OnstaffSalaryChanging(value)
				Me.SendPropertyChanging
				Me._staffSalary = value
				Me.SendPropertyChanged("staffSalary")
				Me.OnstaffSalaryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staffAge", DbType:="Int")>  _
	Public Property staffAge() As System.Nullable(Of Integer)
		Get
			Return Me._staffAge
		End Get
		Set
			If (Me._staffAge.Equals(value) = false) Then
				Me.OnstaffAgeChanging(value)
				Me.SendPropertyChanging
				Me._staffAge = value
				Me.SendPropertyChanged("staffAge")
				Me.OnstaffAgeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staffBirthDate", DbType:="Date")>  _
	Public Property staffBirthDate() As System.Nullable(Of Date)
		Get
			Return Me._staffBirthDate
		End Get
		Set
			If (Me._staffBirthDate.Equals(value) = false) Then
				Me.OnstaffBirthDateChanging(value)
				Me.SendPropertyChanging
				Me._staffBirthDate = value
				Me.SendPropertyChanged("staffBirthDate")
				Me.OnstaffBirthDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staffGender", DbType:="VarChar(1)")>  _
	Public Property staffGender() As String
		Get
			Return Me._staffGender
		End Get
		Set
			If (String.Equals(Me._staffGender, value) = false) Then
				Me.OnstaffGenderChanging(value)
				Me.SendPropertyChanging
				Me._staffGender = value
				Me.SendPropertyChanged("staffGender")
				Me.OnstaffGenderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staffAddress", DbType:="VarChar(MAX)")>  _
	Public Property staffAddress() As String
		Get
			Return Me._staffAddress
		End Get
		Set
			If (String.Equals(Me._staffAddress, value) = false) Then
				Me.OnstaffAddressChanging(value)
				Me.SendPropertyChanging
				Me._staffAddress = value
				Me.SendPropertyChanged("staffAddress")
				Me.OnstaffAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staffEmail", DbType:="VarChar(50)")>  _
	Public Property staffEmail() As String
		Get
			Return Me._staffEmail
		End Get
		Set
			If (String.Equals(Me._staffEmail, value) = false) Then
				Me.OnstaffEmailChanging(value)
				Me.SendPropertyChanging
				Me._staffEmail = value
				Me.SendPropertyChanged("staffEmail")
				Me.OnstaffEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_leaveDate", DbType:="Date")>  _
	Public Property leaveDate() As System.Nullable(Of Date)
		Get
			Return Me._leaveDate
		End Get
		Set
			If (Me._leaveDate.Equals(value) = false) Then
				Me.OnleaveDateChanging(value)
				Me.SendPropertyChanging
				Me._leaveDate = value
				Me.SendPropertyChanged("leaveDate")
				Me.OnleaveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staffLeaveReason", DbType:="VarChar(80)")>  _
	Public Property staffLeaveReason() As String
		Get
			Return Me._staffLeaveReason
		End Get
		Set
			If (String.Equals(Me._staffLeaveReason, value) = false) Then
				Me.OnstaffLeaveReasonChanging(value)
				Me.SendPropertyChanging
				Me._staffLeaveReason = value
				Me.SendPropertyChanged("staffLeaveReason")
				Me.OnstaffLeaveReasonChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
